# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Codecov

on:
  push:
    branches: [ "main" ]
    paths:
      - '.github/**'
      - 'build/**'
      - 'tests/**'
      - '{{cookiecutter.project_slug}}/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/**'
      - 'build/**'
      - 'tests/**'
      - '{{cookiecutter.project_slug}}/**'

permissions:
  contents: read

jobs:
  tests:
    name: "Codecov using python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -el {0}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]

    steps:
      - uses: "actions/checkout@v3"
        with:
          fetch-depth: 0

      # Setup env
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: snaketool
          environment-file: build/environment.yaml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: "Setup Snaketool on ${{ matrix.os }} for Python ${{ matrix.python-version }}"
        run: |
          cookiecutter --no-input ./
          cd my_snaketool/
          python -m pip install --upgrade pip
          pip install .

      - name: "Generate coverage report on ${{ matrix.os }} for Python ${{ matrix.python-version }}"
        run: |
          pip install pytest pytest-cov
          pytest --cov=./ --cov-report=xml --cov-append

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          fail_ci_if_error: true
